package oracle.project.AssetManagement.uiview;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 18 16:19:05 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UserUpdatableVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Address {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getAddress();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setAddress((String)value);
            }
        }
        ,
        Answer {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getAnswer();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setAnswer((String)value);
            }
        }
        ,
        ConfirmPassword {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getConfirmPassword();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setConfirmPassword((String)value);
            }
        }
        ,
        Email {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getEmail();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setEmail((String)value);
            }
        }
        ,
        Firstname {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getFirstname();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setFirstname((String)value);
            }
        }
        ,
        Lastname {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getLastname();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setLastname((String)value);
            }
        }
        ,
        Password {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getPassword();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setPassword((String)value);
            }
        }
        ,
        Phone {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getPhone();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setPhone((Number)value);
            }
        }
        ,
        Question {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getQuestion();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setQuestion((String)value);
            }
        }
        ,
        Userid {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getUserid();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setUserid((String)value);
            }
        }
        ,
        Transaction {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getTransaction();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UserUpdatableVO1 {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getUserUpdatableVO1();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        QuestionVO1 {
            public Object get(UserUpdatableVORowImpl obj) {
                return obj.getQuestionVO1();
            }

            public void put(UserUpdatableVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(UserUpdatableVORowImpl object);

        public abstract void put(UserUpdatableVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int ANSWER = AttributesEnum.Answer.index();
    public static final int CONFIRMPASSWORD = AttributesEnum.ConfirmPassword.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int FIRSTNAME = AttributesEnum.Firstname.index();
    public static final int LASTNAME = AttributesEnum.Lastname.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int PHONE = AttributesEnum.Phone.index();
    public static final int QUESTION = AttributesEnum.Question.index();
    public static final int USERID = AttributesEnum.Userid.index();
    public static final int TRANSACTION = AttributesEnum.Transaction.index();
    public static final int USERUPDATABLEVO1 = AttributesEnum.UserUpdatableVO1.index();
    public static final int QUESTIONVO1 = AttributesEnum.QuestionVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UserUpdatableVORowImpl() {
    }

    /**
     * Gets UserEO entity object.
     * @return the UserEO
     */
    public EntityImpl getUserEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ADDRESS using the alias name Address.
     * @return the ADDRESS
     */
    public String getAddress() {
        return (String)getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS using the alias name Address.
     * @param value value to set the ADDRESS
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for ANSWER using the alias name Answer.
     * @return the ANSWER
     */
    public String getAnswer() {
        return (String)getAttributeInternal(ANSWER);
    }

    /**
     * Sets <code>value</code> as attribute value for ANSWER using the alias name Answer.
     * @param value value to set the ANSWER
     */
    public void setAnswer(String value) {
        setAttributeInternal(ANSWER, value);
    }

    /**
     * Gets the attribute value for CONFIRM_PASSWORD using the alias name ConfirmPassword.
     * @return the CONFIRM_PASSWORD
     */
    public String getConfirmPassword() {
        return (String)getAttributeInternal(CONFIRMPASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for CONFIRM_PASSWORD using the alias name ConfirmPassword.
     * @param value value to set the CONFIRM_PASSWORD
     */
    public void setConfirmPassword(String value) {
        setAttributeInternal(CONFIRMPASSWORD, value);
    }

    /**
     * Gets the attribute value for EMAIL using the alias name Email.
     * @return the EMAIL
     */
    public String getEmail() {
        return (String)getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL using the alias name Email.
     * @param value value to set the EMAIL
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for FIRSTNAME using the alias name Firstname.
     * @return the FIRSTNAME
     */
    public String getFirstname() {
        return (String)getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRSTNAME using the alias name Firstname.
     * @param value value to set the FIRSTNAME
     */
    public void setFirstname(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for LASTNAME using the alias name Lastname.
     * @return the LASTNAME
     */
    public String getLastname() {
        return (String)getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LASTNAME using the alias name Lastname.
     * @param value value to set the LASTNAME
     */
    public void setLastname(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for PASSWORD using the alias name Password.
     * @return the PASSWORD
     */
    public String getPassword() {
        return (String)getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSWORD using the alias name Password.
     * @param value value to set the PASSWORD
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for PHONE using the alias name Phone.
     * @return the PHONE
     */
    public Number getPhone() {
        return (Number)getAttributeInternal(PHONE);
    }

    /**
     * Sets <code>value</code> as attribute value for PHONE using the alias name Phone.
     * @param value value to set the PHONE
     */
    public void setPhone(Number value) {
        setAttributeInternal(PHONE, value);
    }

    /**
     * Gets the attribute value for QUESTION using the alias name Question.
     * @return the QUESTION
     */
    public String getQuestion() {
        return (String)getAttributeInternal(QUESTION);
    }

    /**
     * Sets <code>value</code> as attribute value for QUESTION using the alias name Question.
     * @param value value to set the QUESTION
     */
    public void setQuestion(String value) {
        setAttributeInternal(QUESTION, value);
    }

    /**
     * Gets the attribute value for USERID using the alias name Userid.
     * @return the USERID
     */
    public String getUserid() {
        return (String)getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as attribute value for USERID using the alias name Userid.
     * @param value value to set the USERID
     */
    public void setUserid(String value) {
        setAttributeInternal(USERID, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link Transaction.
     */
    public RowIterator getTransaction() {
        return (RowIterator)getAttributeInternal(TRANSACTION);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UserUpdatableVO1.
     */
    public RowSet getUserUpdatableVO1() {
        return (RowSet)getAttributeInternal(USERUPDATABLEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> QuestionVO1.
     */
    public RowSet getQuestionVO1() {
        return (RowSet)getAttributeInternal(QUESTIONVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
